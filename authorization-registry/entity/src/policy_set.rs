//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

fn default_created() -> DateTimeUtc {
    chrono::Utc::now()
}

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "policy_set")]
pub struct Model {
    #[sea_orm(column_type = "Text")]
    pub policy_issuer: String,
    #[sea_orm(column_type = "Text")]
    pub access_subject: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub licenses: Vec<String>,
    pub max_delegation_depth: i32,
    #[sea_orm(default_value = "now()")]
    #[serde(default = "default_created")]
    pub created: DateTimeUtc,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::policy::Entity")]
    Policy,
}

impl Related<super::policy::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Policy.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
