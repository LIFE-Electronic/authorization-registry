//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::{entity::prelude::*, FromJsonQueryResult};
use serde::{Deserialize, Serialize};
use utoipa::ToSchema;
use crate::delegation_evidence::ResourceRule;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize, ToSchema)]
#[sea_orm(table_name = "policy_set_template")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    #[sea_orm(column_type = "Text", nullable)]
    pub access_subject: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub policy_issuer: Option<String>,
    #[sea_orm(column_type = "Text")]
    pub name: String,
    #[sea_orm(column_type = "Json")]
    pub policies: Vec<Policy>,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
}

#[derive(Deserialize, Clone, Debug, Serialize, FromJsonQueryResult, Eq, PartialEq, ToSchema)]
pub struct Policy {
    pub identifiers: Vec<String>,
    pub resource_type: String,
    pub attributes: Vec<String>,
    pub actions: Vec<String>,
    pub service_providers: Vec<String>,
    pub rules: Vec<ResourceRule>,
}


#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
