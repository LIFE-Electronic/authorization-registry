{"openapi":"3.1.0","info":{"title":"Authorization Registry","description":"Authorization Registry API that conforms to the iSHARE framework to manage policy storage and authorization delegation.\n\nAuthentication is required for most endpoints. Non-admin routes can be accessed with either a Machine-to-Machine (M2M) token or a Human-to-Machine (H2M) token, obtainable via the authentication endpoints (/connect/machine/token for M2M, /connect/human/auth for H2M). Admin routes require an H2M token with the dexspace_admin role.\n\nPolicy management endpoints allow participants to create and manage authorization policy sets that define what rights are delegated to which service consumers. Policies follow the iSHARE Delegation Evidence format to ensure interoperability across the iSHARE network.\n\nAdmin routes provide additional capabilities for managing policies across all participants, while regular routes are scoped to the authenticated party's own policies.","contact":{"name":"WolperTec B.V."},"license":{"name":"License: GPL v3"},"version":"1.0"},"paths":{"/admin/policy-set":{"get":{"tags":["Policy Management - Admin"],"summary":"List all policy sets with optional filtering (admin access)","operationId":"get_all_policy_sets","parameters":[{"name":"access_subject","in":"query","description":"Filter by access subject","required":false,"schema":{"type":["string","null"]}},{"name":"policy_issuer","in":"query","description":"Filter by policy issuer","required":false,"schema":{"type":["string","null"]}}],"responses":{"200":{"description":"List of policy sets matching the filter criteria","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/MatchingPolicySetRow"}}}}},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}}},"security":[{"h2m_bearer_admin":[]}]},"post":{"tags":["Policy Management - Admin"],"summary":"Create a new policy set (admin access)","operationId":"insert_policy_set","requestBody":{"description":"Policy set details and its initial policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsertPolicySetWithPolicies"}}},"required":true},"responses":{"201":{"description":"Policy set successfully created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsertPolicySetResponse"}}}},"400":{"description":"Invalid policy set definition","content":{"application/json":{"example":{"error":"Invalid policy set format"}}}},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}}},"security":[{"h2m_bearer_admin":[]}]}},"/admin/policy-set/{id}":{"get":{"tags":["Policy Management - Admin"],"summary":"Get a policy set by ID (admin access)","operationId":"get_policy_set","parameters":[{"name":"id","in":"path","description":"Identifier of the policy set to retrieve","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Policy set successfully retrieved","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MatchingPolicySetRow"}}}},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}},"404":{"description":"Policy set not found","content":{"application/json":{"example":{"error":"Can't find policy set"}}}}},"security":[{"h2m_bearer_admin":[]}]},"delete":{"tags":["Policy Management - Admin"],"summary":"Delete a policy set (admin access)","operationId":"delete_policy_set","parameters":[{"name":"id","in":"path","description":"Identifier of the policy set to delete","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"204":{"description":"Policy set successfully deleted"},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}},"404":{"description":"Policy set not found","content":{"application/json":{"example":{"error":"Policy set not found"}}}}},"security":[{"h2m_bearer_admin":[]}]}},"/admin/policy-set/{id}/policy":{"post":{"tags":["Policy Management - Admin"],"summary":"Add a new policy to an existing policy set (admin access)","operationId":"add_policy_to_policy_set","parameters":[{"name":"id","in":"path","description":"Identifier of the policy set","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New policy definition to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Policy"}}},"required":true},"responses":{"200":{"description":"Policy successfully added","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model"}}}},"400":{"description":"Invalid policy or service provider validation failed","content":{"application/json":{"example":{"error":"Unable to verify service provider as valid iSHARE party"}}}},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}},"404":{"description":"Policy set not found","content":{"application/json":{"example":{"error":"Policy set not found"}}}}},"security":[{"h2m_bearer_admin":[]}]}},"/admin/policy-set/{policy_set_id}/policy/{policy_id}":{"get":{"tags":["Policy Management (Admin)"],"summary":"Retrieve a specific policy within a policy set","operationId":"get_policy","parameters":[{"name":"policy_set_id","in":"path","description":"Identifier of the policy set","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"policy_id","in":"path","description":"Identifier of the policy to retrieve","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Policy successfully retrieved","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model"}}}},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}},"404":{"description":"Policy or policy set not found","content":{"application/json":{"example":{"error":"Can't find policy"}}}}},"security":[{"h2m_bearer_admin":[]}]},"put":{"tags":["Policy Management - Admin"],"summary":"Replace a policy in a policy set (admin access)","operationId":"replace_policy_in_policy_set","parameters":[{"name":"policy_set_id","in":"path","description":"Identifier of the policy set","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"policy_id","in":"path","description":"Identifier of the policy to replace","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New policy definition","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Policy"}}},"required":true},"responses":{"200":{"description":"Policy successfully replaced","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model"}}}},"400":{"description":"Invalid policy or service provider validation failed","content":{"application/json":{"example":{"error":"Unable to verify service provider as valid iSHARE party"}}}},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}},"404":{"description":"Policy set or policy not found","content":{"application/json":{"example":{"error":"Policy set or policy not found"}}}}},"security":[{"h2m_bearer_admin":[]}]},"delete":{"tags":["Policy Management - Admin"],"summary":"Delete a policy from a policy set (admin access)","operationId":"delete_policy_from_policy_set","parameters":[{"name":"policy_set_id","in":"path","description":"Identifier of the policy set","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"policy_id","in":"path","description":"Identifier of the policy to delete","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"204":{"description":"Policy successfully deleted"},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}},"404":{"description":"Policy or policy set not found","content":{"application/json":{"example":{"error":"Policy not found"}}}}},"security":[{"h2m_bearer_admin":[]}]}},"/capabilities":{"get":{"tags":["Capabilities"],"summary":"Retrieve iSHARE capabilities","operationId":"get_capabilities","responses":{"200":{"description":"Authorization Registry capabilities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CapabilitiesResponse"}}}}}}},"/connect/human/auth":{"get":{"tags":["Authentication"],"summary":"Initiate iSHARE H2M flow by redirecting to the iSHARE identity provider","operationId":"get_auth","parameters":[{"name":"redirect_uri","in":"query","description":"URL to redirect back to after authentication","required":true,"schema":{"type":"string"}},{"name":"state","in":"query","description":"Optional state parameter that will be returned in the callback","required":false,"schema":{"type":["string","null"]}}],"responses":{"302":{"description":"Redirects to iSHARE identity provider for authentication","headers":{"Location":{"schema":{"type":"string"},"description":"iSHARE identity provider URL"}}},"400":{"description":"Invalid request parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/connect/human/auth/code":{"get":{"tags":["Authentication"],"summary":"OAuth2 callback endpoint to exchange auth code for token.","operationId":"get_auth_callback","parameters":[{"name":"code","in":"query","description":"Authorization code from iSHARE identity provider","required":true,"schema":{"type":"string"}},{"name":"state","in":"query","description":"State parameter from initial auth request","required":true,"schema":{"type":"string"}}],"responses":{"302":{"description":"Redirects back to original redirect_uri with access token","headers":{"Location":{"schema":{"type":"string"},"description":"Original redirect_uri with token appended"}}},"400":{"description":"Invalid callback parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Authorization code validation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/connect/machine/token":{"post":{"tags":["Authentication"],"summary":"M2M authentication endpoint to obtain access token","operationId":"get_machine_token","requestBody":{"description":"OAuth2 client credentials request with iSHARE assertions","content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/TokenRequest"}}},"required":true},"responses":{"200":{"description":"Successfully authenticated, returns JWT access token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenResponse"}}}},"400":{"description":"Invalid request parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Authentication failed - invalid client credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/delegation":{"post":{"tags":["Delegation"],"summary":"Obtain Delegation Evidence","operationId":"post_delegation","requestBody":{"description":"Delegation Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DelegationRequestContainer"}}},"required":true},"responses":{"200":{"description":"OK. JSON with delegation evidence","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DelegationResponse"}}}},"400":{"description":"Malformed request","content":{"application/text/plain; charset=utf-8":{"schema":{"type":"string"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"example":{"error":"Unauthorized"}}}}},"security":[{"bearer":[]}]}},"/policy-sets":{"get":{"tags":["Policy Management"],"summary":"Retrieve all policy sets belonging to the authenticated company","operationId":"get_all_policy_sets","responses":{"200":{"description":"List of all policy sets and their associated policies","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/MatchingPolicySetRow"}}}}},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}}},"security":[{"bearer":[]}]},"post":{"tags":["Policy Management"],"summary":"Create a new policy set with associated policies","operationId":"insert_policy_set","requestBody":{"description":"Policy set details and its initial policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsertPolicySetWithPolicies"}}},"required":true},"responses":{"201":{"description":"Policy set successfully created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsertPolicySetResponse"}}}},"400":{"description":"Invalid policy set or policy definitions","content":{"application/json":{"example":{"error":"Invalid policy set format"}}}},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}},"403":{"description":"Forbidden - insufficient permissions","content":{"application/json":{"example":{"error":"Not allowed to create policy sets"}}}}},"security":[{"bearer":[]}]}},"/policy-sets/{id}":{"get":{"tags":["Policy Management"],"summary":"Retrieve a specific policy set by its ID","operationId":"get_policy_set","parameters":[{"name":"id","in":"path","description":"Unique identifier of the policy set to retrieve","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Policy set successfully retrieved","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MatchingPolicySetRow"}}}},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}},"403":{"description":"Forbidden - insufficient permissions","content":{"application/json":{"example":{"error":"Not allowed to read policy set"}}}},"404":{"description":"Policy set not found","content":{"application/json":{"example":{"error":"Can't find policy set"}}}}},"security":[{"bearer":[]}]},"delete":{"tags":["Policy Management"],"summary":"Delete a policy set and all its associated policies","operationId":"delete_policy_set","parameters":[{"name":"id","in":"path","description":"Identifier of the policy set to delete","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"204":{"description":"Policy set successfully deleted"},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}},"403":{"description":"Forbidden - insufficient permissions","content":{"application/json":{"example":{"error":"Not allowed to delete policy set"}}}},"404":{"description":"Policy set not found","content":{"application/json":{"example":{"error":"Policy set not found"}}}}},"security":[{"bearer":[]}]}},"/policy-sets/{id}/policy":{"post":{"tags":["Policy Management"],"summary":"Add a new policy to an existing policy set","operationId":"add_policy_to_policy_set","parameters":[{"name":"id","in":"path","description":"Identifier of the policy set","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New policy definition to add to the policy set","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Policy"}}},"required":true},"responses":{"200":{"description":"Policy successfully added to policy set","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model"}}}},"400":{"description":"Invalid policy definition","content":{"application/json":{"example":{"error":"Invalid policy format"}}}},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}},"403":{"description":"Forbidden - insufficient permissions","content":{"application/json":{"example":{"error":"Not allowed to modify policy set"}}}},"404":{"description":"Policy set not found","content":{"application/json":{"example":{"error":"Policy set not found"}}}}},"security":[{"bearer":[]}]}},"/policy-sets/{policy_set_id}/policy/{policy_id}":{"put":{"tags":["Policy Management"],"summary":"Replace an existing policy within a policy set","operationId":"replace_policy_in_policy_set","parameters":[{"name":"policy_set_id","in":"path","description":"Identifier of the policy set","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"policy_id","in":"path","description":"Identifier of the policy to replace","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New policy definition to replace the existing one","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Policy"}}},"required":true},"responses":{"200":{"description":"Policy successfully replaced","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model"}}}},"400":{"description":"Invalid policy definition","content":{"application/json":{"example":{"error":"Invalid policy format"}}}},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}},"403":{"description":"Forbidden - insufficient permissions","content":{"application/json":{"example":{"error":"Not allowed to modify policy set"}}}},"404":{"description":"Policy set or policy not found","content":{"application/json":{"example":{"error":"Policy set or policy not found"}}}}},"security":[{"bearer":[]}]},"delete":{"tags":["Policy Management"],"summary":"Remove a policy from a policy set","operationId":"delete_policy_from_policy_set","parameters":[{"name":"policy_set_id","in":"path","description":"Identifier of the policy set","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"policy_id","in":"path","description":"Identifier of the policy to remove","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"204":{"description":"Policy successfully removed from policy set"},"401":{"description":"Authentication failed","content":{"application/json":{"example":{"error":"Unauthorized"}}}},"403":{"description":"Forbidden","content":{"application/json":{"example":{"error":"not allowed to delete policy"}}}},"404":{"description":"Policy set or policy not found","content":{"application/json":{"example":{"error":"Can't find policy within policy set"}}}}},"security":[{"bearer":[]}]}}},"components":{"schemas":{"AccessSubjectTarget":{"type":"object","required":["accessSubject"],"properties":{"accessSubject":{"type":"string"}}},"CapabilitiesResponse":{"type":"object","required":["capabilities_token"],"properties":{"capabilities_token":{"type":"string"}}},"DelegationEvidencePolicy":{"type":"object","required":["id","identifiers","resource_type","attributes","actions","service_providers","rules"],"properties":{"actions":{"type":"array","items":{"type":"string"}},"attributes":{"type":"array","items":{"type":"string"}},"id":{"type":"string","format":"uuid"},"identifiers":{"type":"array","items":{"type":"string"}},"resource_type":{"type":"string"},"rules":{"type":"array","items":{"$ref":"#/components/schemas/ResourceRule"}},"service_providers":{"type":"array","items":{"type":"string"}}}},"DelegationRequest":{"type":"object","required":["policyIssuer","target","policySets"],"properties":{"policyIssuer":{"type":"string"},"policySets":{"type":"array","items":{"$ref":"#/components/schemas/PolicySet"}},"target":{"$ref":"#/components/schemas/DelegationTarget"}}},"DelegationRequestContainer":{"type":"object","required":["delegationRequest"],"properties":{"delegationRequest":{"$ref":"#/components/schemas/DelegationRequest"}}},"DelegationResponse":{"type":"object","required":["delegation_token"],"properties":{"delegation_token":{"type":"string"}}},"DelegationTarget":{"type":"object","required":["accessSubject"],"properties":{"accessSubject":{"type":"string"}}},"Deny":{"type":"object","required":["target"],"properties":{"target":{"$ref":"#/components/schemas/Target"}}},"Environment":{"type":"object","required":["serviceProviders"],"properties":{"serviceProviders":{"type":"array","items":{"type":"string"}}}},"ErrorResponse":{"type":"object","required":["error"],"properties":{"error":{"type":"string"},"metadata":{}}},"InsertPolicySetResponse":{"type":"object","required":["uuid"],"properties":{"uuid":{"type":"string","format":"uuid"}}},"InsertPolicySetWithPolicies":{"type":"object","required":["target","policyIssuer","licences","policies","maxDelegationDepth"],"properties":{"licences":{"type":"array","items":{"type":"string"}},"maxDelegationDepth":{"type":"integer","format":"int32"},"policies":{"type":"array","items":{"$ref":"#/components/schemas/Policy"}},"policyIssuer":{"type":"string"},"target":{"$ref":"#/components/schemas/AccessSubjectTarget"}}},"MatchingPolicySetRow":{"type":"object","required":["policy_set_id","access_subject","policy_issuer","policies","licenses","max_delegation_depth"],"properties":{"access_subject":{"type":"string"},"licenses":{"type":"array","items":{"type":"string"}},"max_delegation_depth":{"type":"integer","format":"int32"},"policies":{"type":"array","items":{"$ref":"#/components/schemas/DelegationEvidencePolicy"}},"policy_issuer":{"type":"string"},"policy_set_id":{"type":"string","format":"uuid"}}},"Model":{"type":"object","required":["id","identifiers","resource_type","attributes","actions","service_providers","policy_set","rules"],"properties":{"actions":{"type":"array","items":{"type":"string"}},"attributes":{"type":"array","items":{"type":"string"}},"id":{"type":"string","format":"uuid"},"identifiers":{"type":"array","items":{"type":"string"}},"policy_set":{"type":"string","format":"uuid"},"resource_type":{"type":"string"},"rules":{"type":"array","items":{"$ref":"#/components/schemas/ResourceRule"}},"service_providers":{"type":"array","items":{"type":"string"}}}},"Policy":{"type":"object","required":["target","rules"],"properties":{"rules":{"type":"array","items":{"$ref":"#/components/schemas/ResourceRule"}},"target":{"$ref":"#/components/schemas/ResourceTarget"}}},"PolicySet":{"type":"object","required":["policies"],"properties":{"policies":{"type":"array","items":{"$ref":"#/components/schemas/Policy"}}}},"Resource":{"type":"object","required":["type","identifiers","attributes"],"properties":{"attributes":{"type":"array","items":{"type":"string"}},"identifiers":{"type":"array","items":{"type":"string"}},"type":{"type":"string"}}},"ResourceRule":{"oneOf":[{"type":"object","required":["effect"],"properties":{"effect":{"type":"string","enum":["Permit"]}}},{"allOf":[{"$ref":"#/components/schemas/Deny"},{"type":"object","required":["effect"],"properties":{"effect":{"type":"string","enum":["Deny"]}}}]}]},"ResourceRules":{"type":"object","required":["effect"],"properties":{"effect":{"type":"string"}}},"ResourceTarget":{"type":"object","required":["resource","actions","environment"],"properties":{"actions":{"type":"array","items":{"type":"string"}},"environment":{"$ref":"#/components/schemas/Environment"},"resource":{"$ref":"#/components/schemas/Resource"}}},"Target":{"type":"object","required":["resource","actions"],"properties":{"actions":{"type":"array","items":{"type":"string"}},"resource":{"$ref":"#/components/schemas/Resource"}}},"TokenRequest":{"type":"object","required":["grant_type","client_assertion_type","client_id","client_assertion","scope"],"properties":{"client_assertion":{"type":"string"},"client_assertion_type":{"type":"string"},"client_id":{"type":"string"},"grant_type":{"type":"string"},"scope":{"type":"string"}}},"TokenResponse":{"type":"object","required":["access_token","token_type","expires_in"],"properties":{"access_token":{"type":"string"},"expires_in":{"type":"integer","format":"int64","minimum":0},"token_type":{"type":"string"}}}},"securitySchemes":{"bearer":{"type":"apiKey","in":"header","name":"Bearer Token for Authorize Header"},"h2m_bearer_admin":{"type":"apiKey","in":"header","name":"Bearer Token for Authorize Header"}}}}